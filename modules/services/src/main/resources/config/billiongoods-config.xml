<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <import resource="cache-config.xml"/>

    <bean id="serverDescriptor" class="billiongoods.server.services.ServerDescriptor">
        <constructor-arg name="webHostName" value="${server.web.host}"/>
        <constructor-arg name="mailHostName" value="${server.mail.host}"/>
        <constructor-arg name="alertsMailBox" value="${server.alerts.box}"/>
    </bean>

    <bean id="exchangeManager" class="billiongoods.server.services.price.impl.HibernateExchangeManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="imageResolver" class="billiongoods.server.services.image.impl.FileImageResolver">
        <property name="imagesFolder" value="${server.images.path}"/>
    </bean>

    <bean id="imageManager" class="billiongoods.server.services.image.impl.FileImageManager">
        <property name="imageResolver" ref="imageResolver"/>
    </bean>

    <bean id="attributeManager" class="billiongoods.server.warehouse.impl.HibernateAttributeManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="catalogManager" class="billiongoods.server.warehouse.impl.HibernateCategoryManager">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="attributeManager" ref="attributeManager"/>
    </bean>

    <bean id="articleManager" class="billiongoods.server.warehouse.impl.HibernateArticleManager">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="attributeManager" ref="attributeManager"/>
    </bean>

    <bean id="relationshipManager" class="billiongoods.server.warehouse.impl.HibernateRelationshipManager">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="articleManager" ref="articleManager"/>
    </bean>

    <bean id="basketManager" class="billiongoods.server.services.basket.impl.HibernateBasketManager">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="articleManager" ref="articleManager"/>
        <property name="attributeManager" ref="attributeManager"/>
    </bean>

    <bean id="banggoodPriceLoader" class="billiongoods.server.services.price.impl.loader.BanggoodPriceLoader"/>

    <bean id="priceValidator" class="billiongoods.server.services.price.impl.HibernatePriceValidator">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="articleManager" ref="articleManager"/>
        <property name="exchangeManager" ref="exchangeManager"/>

        <property name="transactionManager" ref="transactionManager"/>

        <property name="taskExecutor">
            <bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
                <property name="poolSize" value="1"/>
                <property name="threadNamePrefix" value="PriceValidation"/>
                <property name="waitForTasksToCompleteOnShutdown" value="true"/>
            </bean>
        </property>

        <property name="priceLoader" ref="banggoodPriceLoader"/>
    </bean>

    <bean id="articlesImporter" class="billiongoods.server.services.arivals.impl.BanggoodArticleImporter">
        <property name="imageManager" ref="imageManager"/>
        <property name="articleManager" ref="articleManager"/>
        <property name="priceLoader" ref="banggoodPriceLoader"/>
        <property name="exchangeManager" ref="exchangeManager"/>
        <property name="relationshipManager" ref="relationshipManager"/>
        <property name="transactionManager" ref="transactionManager"/>

        <property name="taskExecutor">
            <bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
                <property name="poolSize" value="1"/>
                <property name="threadNamePrefix" value="ArticlesImporter"/>
                <property name="waitForTasksToCompleteOnShutdown" value="true"/>
            </bean>
        </property>
    </bean>

    <bean id="payPalTransactionManager" class="billiongoods.server.services.paypal.impl.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="expressCheckout" class="billiongoods.server.services.paypal.PayPalExpressCheckout">
        <property name="configuration">
            <bean class="billiongoods.server.services.paypal.Configuration">
                <constructor-arg name="environment" value="${paypal.environment}"/>
                <constructor-arg name="user" value="${paypal.user}"/>
                <constructor-arg name="password" value="${paypal.password}"/>
                <constructor-arg name="signature" value="${paypal.signature}"/>
            </bean>
        </property>
        <property name="transactionManager" ref="payPalTransactionManager"/>
    </bean>

    <bean id="shipmentManager" class="billiongoods.server.services.payment.impl.DefaultShipmentManager">
    </bean>

    <bean id="orderManager" class="billiongoods.server.services.payment.impl.HibernateOrderManager">
        <property name="exchangeManager" ref="exchangeManager"/>
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="shipmentManager" ref="shipmentManager"/>
    </bean>

    <bean class="billiongoods.server.warehouse.impl.ArticleTrackerCenter">
        <property name="orderManager" ref="orderManager"/>
        <property name="articleManager" ref="articleManager"/>
    </bean>

    <bean id="notificationMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.server.host}"/>
        <property name="port" value="${mail.server.port}"/>
        <property name="username" value="${mail.server.username}"/>
        <property name="password" value="${mail.server.password}"/>
    </bean>

    <bean id="notificationMessageSource" class="billiongoods.server.MessageFormatter">
        <property name="parentMessageSource">
            <bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
                <property name="defaultEncoding" value="UTF-8"/>
                <property name="fallbackToSystemLocale" value="false"/>
                <property name="useCodeAsDefaultMessage" value="true"/>
                <property name="basename" value="classpath:/i18n/notify"/>
            </bean>
        </property>
    </bean>

    <bean id="notificationTaskExecutor" class="billiongoods.core.task.executor.TransactionAwareExecutor">
        <property name="taskExecutor">
            <bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
                <property name="poolSize" value="1"/>
                <property name="threadNamePrefix" value="NotificationManager"/>
                <property name="waitForTasksToCompleteOnShutdown" value="true"/>
            </bean>
        </property>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <bean id="notificationService" class="billiongoods.server.services.notify.impl.DistributedNotificationService">
        <property name="taskExecutor">
            <bean class="billiongoods.core.task.executor.TransactionAwareExecutor">
                <property name="taskExecutor" ref="notificationTaskExecutor"/>
                <property name="transactionManager" ref="transactionManager"/>
            </bean>
        </property>

        <property name="notificationConverter">
            <bean class="billiongoods.server.services.notify.impl.converter.FreeMarkerNotificationConverter">
                <property name="messageSource" ref="notificationMessageSource"/>

                <property name="freeMarkerConfig">
                    <bean class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
                        <property name="defaultEncoding" value="UTF-8"/>
                        <property name="preferFileSystemAccess" value="false"/>
                        <property name="templateLoaderPath" value="classpath:/i18n/notify"/>
                        <property name="freemarkerVariables">
                            <map merge="true">
                                <entry key="serverDescriptor" value-ref="serverDescriptor"/>
                                <entry key="messageSource" value-ref="notificationMessageSource"/>
                            </map>
                        </property>
                        <property name="freemarkerSettings">
                            <props>
                                <prop key="number_format">computer</prop>
                                <prop key="object_wrapper">freemarker.ext.beans.BeansWrapper</prop>
                                <prop key="template_exception_handler">rethrow</prop>
                            </props>
                        </property>
                    </bean>
                </property>
            </bean>
        </property>

        <property name="notificationPublishers">
            <list>
                <bean class="billiongoods.server.services.notify.impl.publisher.MailNotificationPublisher">
                    <property name="mailSender" ref="notificationMailSender"/>
                    <property name="serverDescriptor" ref="serverDescriptor"/>
                    <property name="messageSource" ref="notificationMessageSource"/>
                </bean>
            </list>
        </property>
    </bean>

    <bean class="billiongoods.server.services.notify.impl.center.AlertsOriginCenter">
        <property name="notificationService" ref="notificationService"/>

        <property name="orderManager" ref="orderManager"/>
        <property name="accountManager" ref="accountManager"/>
        <property name="priceValidator" ref="priceValidator"/>
    </bean>

    <bean class="billiongoods.server.services.notify.impl.center.NotificationOriginCenter">
        <property name="orderManager" ref="orderManager"/>

        <property name="notificationService" ref="notificationService"/>
    </bean>

    <!--
        <bean id="playerStateManager" class="billiongoods.server.test.state.impl.HibernatePlayerStateManager">
            <property name="sessionFactory" ref="sessionFactory"/>
        </bean>

        <bean id="applicationEventMulticaster" class="org.springframework.context.event.SimpleApplicationEventMulticaster">
            <property name="taskExecutor">
                <bean class="billiongoods.core.task.executor.TransactionAwareExecutor">
                    <property name="taskExecutor">
                        <bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
                            <property name="poolSize" value="1"/>
                            <property name="threadNamePrefix" value="AEM"/>
                            <property name="waitForTasksToCompleteOnShutdown" value="true"/>
                        </bean>
                    </property>
                    <property name="transactionManager" ref="transactionManager"/>
                </bean>
            </property>
        </bean>
-->

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <bean class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
                    <!--run every morning at 00:00:00.000-->
                    <property name="cronExpression" value="0 0 0 * * ?"/>
                    <property name="jobDetail">
                        <bean class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
                            <property name="name" value="breakingDayNotification"/>
                            <property name="jobClass" value="billiongoods.core.task.scheduler.BreakingDayExecutorJob"/>
                        </bean>
                    </property>
                </bean>

                <bean class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
                    <!--run every morning at 2 AM-->
                    <property name="cronExpression" value="0 0 2 * * ?"/>
                    <property name="jobDetail">
                        <bean class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
                            <property name="name" value="cleaningDayNotification"/>
                            <property name="jobClass" value="billiongoods.core.task.scheduler.CleaningDayExecutorJob"/>
                        </bean>
                    </property>
                </bean>
            </list>
        </property>
        <property name="applicationContextSchedulerContextKey" value="SpringApplicationContext"/>
    </bean>
</beans>